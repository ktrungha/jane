{"version":3,"sources":["colors.ts","components/DealResultItem.tsx","components/Header.tsx","components/Link.tsx","constants.ts","pages/ResultSummary.tsx","components/ValueBox.tsx","components/DealDetailBreadCrumb.tsx","components/dealDetail/DealDetailDesktop.tsx","components/dealDetail/DealDetailTablet.tsx","model/person.ts","pages/Detail.tsx","pages/Form.tsx","utils.ts","App.tsx","serviceWorker.ts","setupTheme.js","index.tsx"],"names":["RED","InfoDiv","styled","div","Wrapper","style","children","rest","Card","elevation","minHeight","width","borderRadius","SkeletonJobResultItem","Skeleton","variant","height","JobResultItem","props","data","display","objectFit","src","dealId","alt","Typography","title","color","flex","value","price","id","Header","textAlign","padding","backgroundColor","Link","RRLink","ROUTES","gen","ResultWrapper","ResultSummary","React","useState","items","setItems","page","setPage","totalPages","setTotalPages","loading","setLoading","useEffect","a","async","fetch","res","ok","json","deals","old","concat","fn","Container","className","css","map","item","to","pathname","state","DealResultItem","key","Array","fill","v","i","marginBottom","Button","disabled","onClick","ValueBox","unit","margin","textTransform","withRouter","current","locationState","location","history","useHistory","backableToResult","Breadcrumbs","cursor","goBack","UpperDiv","LowerDiv","ImageDiv","SkeletonBox","breadCrumb","img","info","marginTop","lowerDiv","Layout","alignItems","DealDetailDesktop","textDecoration","retail","values","name","sellerName","fullWidth","likeCount","soldQuantity","Country","Animal","DealDetailTablet","theme","useTheme","matchDesktop","useMediaQuery","breakpoints","up","setData","Promise","resolve","setTimeout","undefined","defaultPerson","nationalities","Set","FieldWrapper","Form","person","setPerson","personValidation","setPersonValidation","intl","useIntl","onSubmit","e","preventDefault","validation","pendingPerson","retval","length","size","gender","favoriteAnimal","validatePendingPerson","totallyValid","Object","console","log","TextField","label","formatMessage","onChange","persist","target","error","helperText","FormControl","FormLabel","component","RadioGroup","row","FormControlLabel","control","Radio","FormHelperText","FormGroup","one","has","delete","add","Checkbox","checked","Select","MenuItem","type","App","exact","path","Detail","Boolean","window","hostname","match","MUItheme","createMuiTheme","palette","background","default","paper","primary","main","contrastText","text","secondary","typography","fontFamily","subtitle2","fontSize","fontWeight","letterSpacing","subtitle1","body1","body2","h4","lineHeight","button","fetchMock","get","JSON","stringify","slice","delay","ReactDOM","render","ThemeProvider","locale","messages","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d1cf3692.chunk.js","sourcesContent":["export const BLACK_TEXT = '#4c4a50';\r\nexport const GREY = '#949494';\r\nexport const LIGHT_GREY = '#dee2e6';\r\nexport const PRIMARY = 'rgb(255, 129, 136)';\r\nexport const RED = 'rgb(219, 57, 57)';\r\n","import styled from '@emotion/styled';\r\nimport { Card, PaperProps, Typography } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport React from 'react';\r\nimport { FormattedNumber, FormattedMessage } from 'react-intl';\r\nimport { some } from '../constants';\r\nimport { RED } from '../colors';\r\n\r\nconst InfoDiv = styled.div`\r\n  padding: 5px 15px;\r\n`;\r\n\r\ninterface Props {\r\n  data: some;\r\n}\r\n\r\nconst Wrapper: React.FC<PaperProps> = ({ style, children, ...rest }) => {\r\n  return <Card elevation={2} style={{ minHeight: '360px', width: '300px', borderRadius: '8px' }}\r\n    {...rest}>\r\n    {children}\r\n  </Card>\r\n}\r\n\r\nconst JobResultItem: React.FC<Props> = props => {\r\n  const { data } = props;\r\n  return (<Wrapper>\r\n    <img style={{ display: 'block', height: '300px', width: '300px', objectFit: 'cover' }}\r\n      src={`https://cloud.media-jane.com/q_auto:low,f_auto,w_320,dpr_2/v1/img/deals/${data.dealId}_square.jpg`} alt='result' />\r\n    <InfoDiv>\r\n      <div>\r\n        <Typography variant='body2'>{data.title}</Typography>\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Typography variant='caption' style={{ color: RED, flex: 1 }}>\r\n          $<FormattedNumber value={data.price} />\r\n        </Typography>\r\n        <Typography variant='caption'>\r\n          <FormattedMessage id=\"freeShipping\" />\r\n        </Typography>\r\n      </div>\r\n    </InfoDiv>\r\n  </Wrapper>);\r\n}\r\n\r\nexport const SkeletonJobResultItem: React.FC = () => {\r\n  return (<Wrapper >\r\n    <Skeleton variant='rect' height='300px' />\r\n    <InfoDiv>\r\n      <Skeleton width='200px' />\r\n      <Skeleton width='60px' />\r\n    </InfoDiv>\r\n  </Wrapper>);\r\n}\r\n\r\nexport default JobResultItem;\r\n","import React from 'react'\r\nimport { Typography } from '@material-ui/core';\r\nimport { PRIMARY } from '../colors';\r\n\r\nconst Header: React.FC = () => {\r\n  return <div style={{ textAlign: 'center', padding: '10px 0', backgroundColor: PRIMARY, color: 'white' }}>\r\n  <Typography variant=\"h4\">\r\n    JANE\r\n  </Typography>\r\n</div>\r\n}\r\n\r\nexport default Header;\r\n","import styled from '@emotion/styled';\r\nimport { Link as RRLink } from 'react-router-dom';\r\n\r\nexport const Link = styled(RRLink)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n`;","export type some = { [key: string]: any }\r\n\r\nexport const backableToResultKey = 'backableToResult';\r\n\r\nexport const ROUTES = {\r\n  detail: {\r\n    gen: (id: string) => `/detail/${id}`,\r\n    value: \"/detail/:id\"\r\n  },\r\n  form: '/form'\r\n}","import styled from '@emotion/styled';\r\nimport { Button, Container, Typography } from '@material-ui/core';\r\nimport { css } from 'emotion';\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport DealResultItem, { SkeletonJobResultItem as SkeletonDealResultItem } from '../components/DealResultItem';\r\nimport Header from '../components/Header';\r\nimport { Link } from '../components/Link';\r\nimport { backableToResultKey, some, ROUTES } from '../constants';\r\n\r\nconst ResultWrapper = styled.div`\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  margin: 10px 15px;\r\n`;\r\n\r\nconst ResultSummary: React.FC = props => {\r\n  const [items, setItems] = React.useState<some[]>([]);\r\n  const [page, setPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const fn = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await fetch(`https://jane.com/mock/deals?page=${page}`);\r\n        if (res.ok) {\r\n          const json = await res.json();\r\n          if (page === 0) {\r\n            setTotalPages(json.totalPages);\r\n            setItems(json.deals);\r\n          } else {\r\n            setItems(old => old?.concat(json.deals))\r\n          }\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fn();\r\n  }, [page]);\r\n\r\n  return <div>\r\n    <Header />\r\n    <Container>\r\n      <div className={css`\r\n      display: flex;\r\n      justify-content: center;\r\n      flex-wrap: wrap;\r\n      margin: 10px auto;\r\n    `}>\r\n        {\r\n          items.map(item => <ResultWrapper>\r\n            <Link to={{\r\n              pathname: ROUTES.detail.gen(item.dealId),\r\n              state: { item, [backableToResultKey]: true }\r\n            }}>\r\n              <DealResultItem data={item} key={item.dealId} />\r\n            </Link>\r\n          </ResultWrapper>)\r\n        }\r\n        {\r\n          loading &&\r\n          (new Array(10).fill(1)).map((v, i) => <ResultWrapper>\r\n            <SkeletonDealResultItem key={i} />\r\n          </ResultWrapper>)\r\n        }\r\n      </div>\r\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n        <Button color='primary' disabled={loading || page === totalPages} onClick={() => setPage(old => old + 1)}>\r\n          <Typography variant='body1'>\r\n            <FormattedMessage id=\"loadMore\" />\r\n          </Typography>\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  </div>;\r\n};\r\n\r\nexport default ResultSummary;\r\n","import React from 'react';\r\nimport { FormattedNumber } from 'react-intl';\r\nimport { Typography } from '@material-ui/core';\r\n\r\ninterface Props {\r\n  value: number;\r\n  unit: React.ReactNode;\r\n}\r\n\r\nconst ValueBox: React.FC<Props> = props => {\r\n  const { value, unit } = props;\r\n  return <div style={{ padding: '10px 0', margin: '0 40px' }}>\r\n    <div style={{ textAlign: 'center' }}>\r\n      <Typography variant='h5'>\r\n        <FormattedNumber value={value} />\r\n      </Typography>\r\n    </div>\r\n    <div style={{ textAlign: 'center' }}>\r\n      <Typography variant='body1' color='textSecondary' style={{ textTransform: 'uppercase' }}>\r\n        {unit}\r\n      </Typography>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default ValueBox;\r\n","import { Breadcrumbs, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { RouteComponentProps, useHistory, withRouter } from 'react-router';\r\nimport { backableToResultKey, some } from '../constants';\r\nimport { Link } from './Link';\r\n\r\ninterface Props extends RouteComponentProps {\r\n  current: string;\r\n}\r\n\r\nconst DealDetailBreadCrumb: React.FC<Props> = props => {\r\n  const { current, location } = props;\r\n\r\n  const locationState = location.state as some | undefined;\r\n  const history = useHistory();\r\n  const backableToResult = (locationState && locationState[backableToResultKey]) || false;\r\n\r\n  return <Breadcrumbs>\r\n    {\r\n      backableToResult ?\r\n        <span style={{ cursor: 'pointer' }} onClick={() => history.goBack()}>\r\n          <Typography >\r\n            <FormattedMessage id=\"resultSummary\" />\r\n          </Typography>\r\n        </span>\r\n        :\r\n        <Link to=\"/\">\r\n          <Typography >\r\n            <FormattedMessage id=\"resultSummary\" />\r\n          </Typography>\r\n        </Link>\r\n    }\r\n    <Typography color=\"textPrimary\">{current}</Typography>\r\n  </Breadcrumbs>\r\n}\r\n\r\nexport default withRouter(DealDetailBreadCrumb);\r\n","import styled from '@emotion/styled';\r\nimport { Button, Container, Typography } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport React from 'react';\r\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\r\nimport { DealDetailProps } from '.';\r\nimport { LIGHT_GREY, RED } from '../../colors';\r\nimport ValueBox from '../ValueBox';\r\nimport DealDetailBreadCrumb from '../DealDetailBreadCrumb';\r\nimport { Link } from '../Link';\r\nimport Header from '../Header';\r\n\r\nconst UpperDiv = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst LowerDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  padding: 20px 5px;\r\n  border-top: 1px solid ${LIGHT_GREY};\r\n  border-bottom: 1px solid ${LIGHT_GREY};\r\n`;\r\n\r\nconst ImageDiv = styled.div`\r\n  flex: 1;\r\n  border: 1px solid ${LIGHT_GREY};\r\n`;\r\n\r\nconst InfoDiv = styled.div`\r\n  width: 300px;\r\n  padding-left: 20px;\r\n`;\r\n\r\nconst SkeletonBox: React.FC = () => {\r\n  return <Layout breadCrumb={<Skeleton width=\"200px\" />}\r\n    img={<Skeleton height=\"500px\" variant='rect' />}\r\n    info={\r\n      <><Skeleton width='200px' />\r\n        <Skeleton width='80px' style={{ marginTop: '15px' }} />\r\n        <Skeleton width='70px' style={{ marginTop: '15px' }} />\r\n      </>\r\n    }\r\n    lowerDiv={<Skeleton variant='rect' height=\"44px\" width='880px' />} />;\r\n}\r\n\r\nconst Layout: React.FC<{ breadCrumb: React.ReactNode, img: React.ReactNode, info: React.ReactNode, lowerDiv: React.ReactNode }>\r\n  = props => {\r\n    const { breadCrumb, img, info, lowerDiv } = props;\r\n    return <div style={{ marginBottom: '20px' }}>\r\n      <div style={{ height: '70px', display: 'flex', alignItems: 'center' }}>\r\n        {breadCrumb}\r\n      </div>\r\n      <UpperDiv>\r\n        <ImageDiv>\r\n          {img}\r\n        </ImageDiv>\r\n        <InfoDiv>\r\n          {info}\r\n        </InfoDiv>\r\n      </UpperDiv>\r\n      <LowerDiv>\r\n        {lowerDiv}\r\n      </LowerDiv>\r\n    </div>\r\n  }\r\n\r\nconst DealDetailDesktop: React.FC<DealDetailProps> = props => {\r\n  const { data } = props;\r\n  return <>\r\n    <Header />\r\n    <Container>\r\n      <div style={{ width: '930px', margin: 'auto' }}>\r\n        {\r\n          data ?\r\n            <Layout breadCrumb={<DealDetailBreadCrumb current={data.title} />}\r\n              img={<img alt='deal' style={{ display: 'block' }}\r\n                src={`https://cloud.media-jane.com/q_auto:low,f_auto,w_320,dpr_2/v1/img/deals/${data.dealId}_square.jpg`} />}\r\n              info={<>\r\n                <div style={{ padding: '10px 0' }}>\r\n                  <Typography variant='h5'>\r\n                    {\r\n                      data.title\r\n                    }\r\n                  </Typography>\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'baseline', padding: '10px 0' }}>\r\n                  <Typography variant='body1' style={{ color: RED }}>\r\n                    $\r\n                  {\r\n                      <FormattedNumber value={data.price} />\r\n                    }\r\n                  </Typography>\r\n                  &emsp;\r\n                <Typography variant='body2' style={{ textDecoration: 'linethrough' }}>\r\n                    $\r\n                  {\r\n                      <FormattedNumber value={data.retail} />\r\n                    }\r\n                  </Typography>\r\n                </div>\r\n                <div style={{ padding: '10px 0' }}>\r\n                  <Typography variant='body1'>\r\n                    <FormattedMessage id=\"sellerName\" values={{ name: data.sellerName }} />\r\n                  </Typography>\r\n                </div>\r\n                <div style={{ padding: '20px 0' }}>\r\n                  <Link to=\"/form\">\r\n                    <Button variant='contained' fullWidth color='primary'>\r\n                      <FormattedMessage id=\"goToForm\" />\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </>}\r\n              lowerDiv={<><ValueBox value={data.likeCount}\r\n                unit={<FormattedMessage id={data.likeCount ? 'likes' : 'like'} />} />\r\n                <ValueBox value={data.soldQuantity}\r\n                  unit={<FormattedMessage id='sold' />} /></>}\r\n            /> :\r\n            <SkeletonBox />\r\n        }\r\n      </div>\r\n    </Container>\r\n  </>\r\n}\r\n\r\nexport default DealDetailDesktop;\r\n","import styled from '@emotion/styled';\r\nimport { Button, Container, Typography } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport React from 'react';\r\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\r\nimport { DealDetailProps } from '.';\r\nimport { LIGHT_GREY, RED } from '../../colors';\r\nimport DealDetailBreadCrumb from '../DealDetailBreadCrumb';\r\nimport { Link } from '../Link';\r\nimport ValueBox from '../ValueBox';\r\nimport Header from '../Header';\r\n\r\nconst LowerDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  padding: 20px 5px;\r\n  border-top: 1px solid ${LIGHT_GREY};\r\n  border-bottom: 1px solid ${LIGHT_GREY};\r\n`;\r\n\r\nconst ImageDiv = styled.div`\r\n  border: 1px solid ${LIGHT_GREY};\r\n`;\r\n\r\nconst InfoDiv = styled.div`\r\n  padding: 10px 20px;\r\n`;\r\n\r\nconst Layout: React.FC<{ breadCrumb: React.ReactNode, img: React.ReactNode, info: React.ReactNode, lowerDiv: React.ReactNode }>\r\n  = props => {\r\n    const { breadCrumb, img, info, lowerDiv } = props;\r\n    return <div style={{ marginBottom: '20px' }}>\r\n      <div style={{ height: '70px', display: 'flex', alignItems: 'center' }}>\r\n        {breadCrumb}\r\n      </div>\r\n      <ImageDiv>\r\n        {img}\r\n      </ImageDiv>\r\n      <InfoDiv>\r\n        {info}\r\n      </InfoDiv>\r\n      <LowerDiv>\r\n        {lowerDiv}\r\n      </LowerDiv>\r\n    </div>\r\n  }\r\n\r\nconst SkeletonBox: React.FC = () => {\r\n  return <Layout breadCrumb={<Skeleton width=\"200px\" />}\r\n    img={<Skeleton height=\"500px\" variant='rect' />}\r\n    info={\r\n      <>\r\n        <Skeleton width='200px' />\r\n        <Skeleton width='80px' style={{ marginTop: '15px' }} />\r\n        <Skeleton width='70px' style={{ marginTop: '15px' }} />\r\n      </>\r\n    }\r\n    lowerDiv={<Skeleton variant='rect' height=\"44px\" width='880px' />} />;\r\n}\r\n\r\nconst DealDetailTablet: React.FC<DealDetailProps> = props => {\r\n  const { data } = props;\r\n  return <>\r\n    <Header />\r\n    <Container>\r\n      <div style={{ width: '100%', margin: 'auto' }}>\r\n        {\r\n          data ?\r\n            <Layout breadCrumb={<DealDetailBreadCrumb current={data.title} />}\r\n              img={<img alt='deal' style={{ display: 'block', width: '100%' }}\r\n                src={`https://cloud.media-jane.com/q_auto:low,f_auto,w_320,dpr_2/v1/img/deals/${data.dealId}_square.jpg`} />}\r\n              info={<>\r\n                <div style={{ padding: '10px 0' }}>\r\n                  <Typography variant='h5'>\r\n                    {\r\n                      data.title\r\n                    }\r\n                  </Typography>\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'baseline', padding: '10px 0' }}>\r\n                  <Typography variant='body1' style={{ color: RED }}>\r\n                    $\r\n                  {\r\n                      <FormattedNumber value={data.price} />\r\n                    }\r\n                  </Typography>\r\n                  &emsp;\r\n                <Typography variant='body2' style={{ textDecoration: 'linethrough' }}>\r\n                    $\r\n                  {\r\n                      <FormattedNumber value={data.retail} />\r\n                    }\r\n                  </Typography>\r\n                </div>\r\n                <div style={{ padding: '10px 0' }}>\r\n                  <Typography variant='body1'>\r\n                    <FormattedMessage id=\"sellerName\" values={{ name: data.sellerName }} />\r\n                  </Typography>\r\n                </div>\r\n                <div style={{ padding: '20px 0' }}>\r\n                  <Link to=\"/form\">\r\n                    <Button variant='contained' fullWidth color='primary'>\r\n                      <FormattedMessage id=\"goToForm\" />\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </>}\r\n              lowerDiv={<><ValueBox value={data.likeCount}\r\n                unit={<FormattedMessage id={data.likeCount ? 'likes' : 'like'} />} />\r\n                <ValueBox value={data.soldQuantity}\r\n                  unit={<FormattedMessage id='sold' />} /></>}\r\n            /> :\r\n            <SkeletonBox />\r\n        }\r\n      </div>\r\n    </Container>\r\n  </>\r\n}\r\n\r\nexport default DealDetailTablet;\r\n","export enum Country {\r\n  US = 'US', Canada = 'Canada', Mexico = 'Mexico',\r\n};\r\n\r\nexport enum Animal {\r\n  Pig = 'pig',\r\n  Rabbit = 'rabbit',\r\n  Cat = 'cat',\r\n  Crocodile = 'crocodile',\r\n  Bear = 'bear',\r\n  Koala = 'koala',\r\n};\r\n\r\nexport type Gender = 'male' | 'female';\r\n\r\nexport interface Person extends PendingPerson {\r\n  name: string;\r\n  gender: Gender;\r\n  nationalities: Set<Country>;\r\n  favoriteAnimal: Animal;\r\n}\r\n\r\nexport interface PendingPerson {\r\n  name: string;\r\n  gender?: Gender;\r\n  nationalities: Set<Country>;\r\n  favoriteAnimal?: Animal;\r\n}\r\n\r\nexport interface PendingPersonValidation {\r\n  name?: string;\r\n  gender?: string;\r\n  nationalities?: string;\r\n  favoriteAnimal?: string;\r\n}\r\n\r\nexport function validatePendingPerson(pendingPerson: PendingPerson) {\r\n  const retval: PendingPersonValidation = {};\r\n\r\n  if (!pendingPerson.name) {\r\n    retval.name = 'personValidation.noName';\r\n  } else if (pendingPerson.name.length < 2) {\r\n    retval.name = 'personValidation.nameTooShort';\r\n  }\r\n\r\n  if (pendingPerson.nationalities.size === 0) {\r\n    retval.nationalities = 'personValidation.noNationailty';\r\n  }\r\n\r\n  if (!pendingPerson.gender) {\r\n    retval.gender = 'personValidation.noGender';\r\n  }\r\n\r\n  if (!pendingPerson.favoriteAnimal) {\r\n    retval.favoriteAnimal = 'personValidation.noFavoriteAnimal';\r\n  }\r\n\r\n  return retval;\r\n}\r\n\r\nexport const defaultPerson = { name: '', nationalities: new Set<Country>() };\r\n","import { useMediaQuery, useTheme } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport DealDetailDesktop from '../components/dealDetail/DealDetailDesktop';\r\nimport DealDetailTablet from '../components/dealDetail/DealDetailTablet';\r\nimport { some } from '../constants';\r\n\r\nexport interface DetailRouteProps extends RouteComponentProps {\r\n}\r\n\r\nconst Detail: React.FC<DetailRouteProps> = props => {\r\n  const { location } = props;\r\n\r\n  const theme = useTheme();\r\n  const matchDesktop = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n  const [data, setData] = React.useState<some | undefined>();\r\n\r\n  React.useEffect(() => {\r\n    const fn = async () => {\r\n      // mock an API request to jane.com since CORS is not turned on\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      const state = location.state as some | undefined;\r\n      setData(state?.item || undefined);\r\n    }\r\n    fn();\r\n  }, [location]);\r\n\r\n  return <>\r\n    {matchDesktop ? <DealDetailDesktop data={data} /> : <DealDetailTablet data={data} />}\r\n  </>\r\n};\r\n\r\nexport default withRouter(Detail);\r\n","import styled from '@emotion/styled';\r\nimport { Button, Checkbox, Container, FormControl, FormControlLabel, FormGroup, FormHelperText, MenuItem, Radio, RadioGroup, Select, TextField, Typography } from '@material-ui/core';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport Header from '../components/Header';\r\nimport { totallyValid } from '../utils';\r\nimport { PendingPerson, Country, PendingPersonValidation, Person, defaultPerson, Animal, validatePendingPerson } from '../model/person';\r\n\r\nconst FieldWrapper = styled.div`\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst Form: React.FC = () => {\r\n\r\n  // NOTE: using redux store to keep form info is a terrible idea. We should not use redux-form library\r\n  // MORE NOTE: using form wrapper library like formik is also a bad idea. You will have problem with locale-sensitive date field\r\n  // For example: when you allow a date field to be typeable, the user enters 12/20/2020 and then clicks\r\n  // to change locale to say French, now the date field needs to be changed to 20/12/2020.\r\n  // This will be much easier to change if we can actually touch the form data ourselves\r\n  // which is not possible (as far as I know) with formik.\r\n  // Therefore, let's roll the form ourselves\r\n\r\n  const [person, setPerson] = React.useState<PendingPerson>(defaultPerson);\r\n  const [personValidation, setPersonValidation] = React.useState<PendingPersonValidation>({});\r\n\r\n  const intl = useIntl();\r\n\r\n  return <div>\r\n    <Header />\r\n    <Container>\r\n      <form onSubmit={e => {\r\n        e.preventDefault();\r\n        const validation = validatePendingPerson(person);\r\n        setPersonValidation(validation);\r\n        const valid = totallyValid(validation);\r\n        if (valid) {\r\n          console.log(person as Person);\r\n          setPerson(defaultPerson);\r\n          setPersonValidation({});\r\n        }\r\n      }}>\r\n        <div style={{ margin: '10px auto', width: '600px' }}>\r\n          <FieldWrapper>\r\n            <TextField\r\n              fullWidth\r\n              value={person.name}\r\n              label={intl.formatMessage({ id: 'person.name' })}\r\n              onChange={(e) => {\r\n                e.persist();\r\n                setPerson(old => ({ ...old, name: e.target.value }))\r\n              }}\r\n              error={!!personValidation.name}\r\n              helperText={personValidation.name ? intl.formatMessage({ id: personValidation.name }) : ' '} />\r\n          </FieldWrapper>\r\n          <FieldWrapper>\r\n            <FormControl error={!!personValidation.gender} fullWidth>\r\n              <FormLabel component=\"legend\">\r\n                <FormattedMessage id=\"person.gender\" />\r\n              </FormLabel>\r\n              <RadioGroup\r\n                row\r\n                value={person.gender || null}\r\n                onChange={(e, value) => setPerson(old => ({ ...old, gender: value as any }))}>\r\n                <FormControlLabel control={<Radio />} value='female' label={intl.formatMessage({ id: 'female' })} />\r\n                <FormControlLabel control={<Radio />} value='male' label={intl.formatMessage({ id: 'male' })} />\r\n              </RadioGroup>\r\n              <FormHelperText>\r\n                {personValidation.gender ? <FormattedMessage id={personValidation.gender} /> : ' '}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </FieldWrapper>\r\n          <FieldWrapper>\r\n            <FormControl error={!!personValidation.nationalities} fullWidth>\r\n              <FormLabel component=\"legend\">\r\n                <FormattedMessage id=\"person.nationality\" />\r\n              </FormLabel>\r\n              <FormGroup row>\r\n                {\r\n                  Object.values(Country).map(one =>\r\n                    <FormControlLabel key={one}\r\n                      onChange={() => setPerson(old => {\r\n                        const nationalities = new Set(old.nationalities);\r\n                        if (nationalities.has(one)) {\r\n                          nationalities.delete(one)\r\n                        } else {\r\n                          nationalities.add(one);\r\n                        }\r\n                        return {\r\n                          ...old,\r\n                          nationalities\r\n                        }\r\n                      })}\r\n                      control={<Checkbox />} value={one} label={one} checked={person.nationalities.has(one)} />)\r\n                }\r\n              </FormGroup>\r\n              <FormHelperText>\r\n                {personValidation.nationalities ? <FormattedMessage id={personValidation.nationalities} /> : ' '}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </FieldWrapper>\r\n          <FieldWrapper>\r\n            <FormControl error={!!personValidation.favoriteAnimal} fullWidth>\r\n              <FormLabel component=\"legend\">\r\n                <FormattedMessage id=\"person.favoriteAnimal\" />\r\n              </FormLabel>\r\n              <Select\r\n                style={{ textTransform: 'capitalize' }}\r\n                fullWidth\r\n                value={person.favoriteAnimal || ''}\r\n                onChange={(e) => setPerson(old => ({ ...old, favoriteAnimal: e.target.value as any }))}>\r\n                <MenuItem key='' value='' style={{ display: 'none' }} />\r\n                {\r\n                  Object.values(Animal).map(one =>\r\n                    <MenuItem key={one} value={one} style={{ textTransform: 'capitalize' }}>{one}</MenuItem>)\r\n                }\r\n              </Select>\r\n              <FormHelperText>\r\n                {personValidation.favoriteAnimal ? <FormattedMessage id={personValidation.favoriteAnimal} /> : ' '}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </FieldWrapper>\r\n          <Button fullWidth variant='contained' color='primary' type=\"submit\" >\r\n            <Typography variant='body2'>\r\n              <FormattedMessage id=\"submit\" />\r\n            </Typography>\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Container>\r\n  </div>\r\n}\r\n\r\nexport default Form;\r\n","import { some } from \"./constants\";\r\n\r\nexport function totallyValid(validation: some) {\r\n  const values = Object.values(validation);\r\n  for (let i = 0; i < values.length; i += 1) {\r\n    const value = values[i];\r\n    if (!value) {\r\n      continue;\r\n    }\r\n    if (typeof value === 'string') {\r\n      return false;\r\n    }\r\n    const subValid = totallyValid(value);\r\n    if (!subValid) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ResultSummary from './pages/ResultSummary';\nimport Detail from './pages/Detail';\nimport { ROUTES } from './constants';\nimport Form from './pages/Form';\n\nconst App: React.FC = () => {\n  return (\n    <Switch>\n      <Route exact path={[ROUTES.detail.value, `/:githubRepo/${ROUTES.detail.value}`]} component={Detail} />\n      <Route exact path={[ROUTES.form, `/:githubRepo/${ROUTES.form}`]} component={Form} />\n      <Route path=\"/\" component={ResultSummary} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { GREY, BLACK_TEXT, PRIMARY } from './colors';\r\n\r\nexport const MUItheme = createMuiTheme({\r\n  palette: {\r\n    background: { default: 'white', paper: 'white' },\r\n    primary: { main: PRIMARY, contrastText: 'white' },\r\n    text: { primary: BLACK_TEXT, secondary: GREY }\r\n  },\r\n  typography: {\r\n    fontFamily: 'Lato',\r\n    subtitle2: { fontSize: '12px', fontWeight: 700, letterSpacing: '0.5px' },\r\n    subtitle1: { fontSize: '20px', fontWeight: 700, letterSpacing: '0.5px' },\r\n    body1: { fontSize: '16px', fontWeight: 400, letterSpacing: '0.5px' },\r\n    body2: { fontSize: '14px', fontWeight: 400, letterSpacing: '0.5px' },\r\n    h4: { fontSize: '32px', lineHeight: '48px', fontWeight: 700, letterSpacing: '0.5px' },\r\n    button: { textTransform: 'none' }\r\n  }\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core';\nimport { MUItheme } from './setupTheme';\nimport { IntlProvider } from 'react-intl';\nimport messages from './en.json';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { BrowserRouter } from 'react-router-dom';\nimport fetchMock from 'fetch-mock';\nimport deals from './mock.json';\n\n// Cannot find a public API that has CORS, need to mock API here\nfetchMock.get('https://jane.com/mock/deals?page=0', JSON.stringify({\n  totalPages: 4,\n  deals: deals.slice(0, 10)\n}), {delay: 800});\n\nfetchMock.get('https://jane.com/mock/deals?page=1', JSON.stringify({\n  totalPages: 4,\n  deals: deals.slice(10, 20)\n}), {delay: 800});\n\nfetchMock.get('https://jane.com/mock/deals?page=2', JSON.stringify({\n  totalPages: 4,\n  deals: deals.slice(20, 30)\n}), {delay: 800});\n\nfetchMock.get('https://jane.com/mock/deals?page=3', JSON.stringify({\n  totalPages: 4,\n  deals: deals.slice(30, 40)\n}), {delay: 800});\n\nReactDOM.render(<ThemeProvider theme={MUItheme}>\n  <IntlProvider locale='en' messages={messages}>\n    <CssBaseline />\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </IntlProvider>\n</ThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}